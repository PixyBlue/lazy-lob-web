services:
  web:
    build: ./dockers/caddy
    restart: unless-stopped
    ports:
      - 443:443
    volumes:
      - type: bind
        source: ./caddyfile.src.json
        target: /etc/caddy/caddyfile.src.json
        read_only: true
      - type: bind
        source: ./llw/package.json
        target: /srv/package.json
        read_only: true
      - type: bind
        source: ./llw/package-lock.json
        target: /srv/package-lock.json
      - ./llw/node_modules:/srv/node_modules
      - ./llw/node_modules/htmx.org/dist:/usr/share/caddy/assets/js/htmx
      - ./llw/node_modules/hyperscript.org/dist:/usr/share/caddy/assets/js/hyperscript
      - ./app/public:/usr/share/caddy
      - ./app/migrations:/srv/db/migrations
      - ./app/data:/data
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable
      - DB_ANON_ROLE=${DB_ANON_ROLE}
      - DB_SCHEMA=${DB_SCHEMA}

  db:
    image: postgres:alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_ANON_ROLE=${DB_ANON_ROLE}
      - DB_SCHEMA=${DB_SCHEMA}
    volumes:
      - ./app/data/progres:/var/lib/postgresql/data
    restart: unless-stopped

  api:
    image: postgrest/postgrest:latest
    environment:
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - PGRST_DB_SCHEMA=${DB_SCHEMA}
      - PGRST_DB_ANON_ROLE=${DB_ANON_ROLE}
    restart: unless-stopped
